{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"time",
				"time_microsec"
			],
			[
				"Rigi",
				"rigidBodyID"
			],
			[
				"best",
				"bestScores"
			],
			[
				"PS",
				"PSMove_False"
			],
			[
				"lam",
				"lamda"
			],
			[
				"index",
				"index1"
			],
			[
				"lamd",
				"lamda1"
			],
			[
				"join",
				"join_rows"
			],
			[
				"tranas",
				"translation"
			],
			[
				"trans",
				"translation"
			],
			[
				"samp",
				"samplesB"
			],
			[
				"Rotat",
				"Rotation3D"
			],
			[
				"k",
				"kW"
			],
			[
				"minDi",
				"minDiffPos"
			],
			[
				"elimi",
				"elimination_score_threshold"
			],
			[
				"alpha",
				"alpha_x"
			],
			[
				"V",
				"V_x"
			],
			[
				"moca",
				"mocapRecording"
			],
			[
				"r",
				"rigidBodyId"
			],
			[
				"pro",
				"proj_ptr"
			],
			[
				"psmo",
				"psmoveTracker"
			],
			[
				"ya",
				"yawRot"
			],
			[
				"pitc",
				"pitchRot"
			],
			[
				"rig",
				"rigidBodies"
			],
			[
				"rigid",
				"rigidBodies"
			],
			[
				"Mocap",
				"MotionCapture"
			],
			[
				"LH",
				"LHInput_"
			],
			[
				"Simul",
				"SimulationParameters"
			],
			[
				"simParam",
				"simParameters"
			],
			[
				"psmove",
				"psmoveStream"
			],
			[
				"hyo",
				"hypothesisKey"
			],
			[
				"rigi",
				"rigidBodies"
			],
			[
				"draw",
				"drawMatch"
			],
			[
				"sensor",
				"sensorPlant"
			],
			[
				"Cal",
				"CalibrationTools"
			],
			[
				"Transfo",
				"Transform3D"
			],
			[
				"Trans",
				"Transform3D"
			],
			[
				"stream",
				"stream_name_1"
			],
			[
				"curren",
				"currentState1"
			],
			[
				"error",
				"errorThreshold"
			],
			[
				"number",
				"number_of_trials"
			],
			[
				"measure",
				"measuredX"
			],
			[
				"transf",
				"Transform3D"
			],
			[
				"total",
				"totalScores"
			],
			[
				"recorded",
				"recordedStates"
			],
			[
				"eliminated",
				"eliminatedHypotheses"
			],
			[
				"Rig",
				"RigidBody"
			],
			[
				"window",
				"window"
			],
			[
				"allo",
				"allowedIDs"
			],
			[
				"all",
				"mocapAllowedIDs"
			],
			[
				"Rigib",
				"RigidBodyID"
			],
			[
				"quat",
				"quat_a"
			],
			[
				"sam",
				"samplesA"
			],
			[
				"comn",
				"combinedC"
			],
			[
				"psm",
				"psmoveStream"
			],
			[
				"laten",
				"latencyOfStream1"
			],
			[
				"late",
				"latencyOfStream2"
			],
			[
				"auto",
				"autocal"
			],
			[
				"use",
				"useSimulation"
			],
			[
				"opti",
				"optitrackStream"
			],
			[
				"opt",
				"optitrackStream"
			],
			[
				"Mo",
				"MocapStream"
			],
			[
				"high",
				"high_resolution_clock"
			],
			[
				"cone",
				"coneRadius"
			],
			[
				"PSEY",
				"PSEYE_FOV_BLUE_DOT"
			],
			[
				"ri",
				"rigidBody"
			],
			[
				"frame",
				"frame_time_since_start"
			],
			[
				"vid",
				"videoStartTime"
			],
			[
				"video",
				"video_frames"
			],
			[
				"form",
				"format"
			],
			[
				"folder",
				"foldername"
			],
			[
				"OPENCV",
				"OPENCV_INCLUDE_DIR"
			],
			[
				"PSMOV",
				"PSMOVEAPI_TRACKER_LIBRARY"
			],
			[
				"diff",
				"diffuseIntensity"
			],
			[
				"plane",
				"plane_model"
			],
			[
				"cube",
				"cubeMaterial"
			],
			[
				"cu",
				"current_pitch"
			],
			[
				"viewD",
				"viewDir0"
			],
			[
				"current",
				"current_yaw"
			],
			[
				"view",
				"viewDir0"
			],
			[
				"te",
				"texToScreenShader"
			],
			[
				"monke",
				"monkeyMaterial"
			],
			[
				"Frame",
				"FrameBuffer"
			],
			[
				"tex",
				"texName"
			],
			[
				"cam",
				"Camera"
			],
			[
				"objec",
				"object_name"
			],
			[
				"obj",
				"object_name"
			],
			[
				"vertice",
				"vertices"
			],
			[
				"model",
				"model_path"
			],
			[
				"FOV",
				"FOV_Y"
			],
			[
				"as",
				"aspectRatio"
			],
			[
				"GL",
				"GL_COLOR_ATTACHMENT0"
			],
			[
				"rende",
				"renderTexture"
			],
			[
				"wind",
				"window_height"
			],
			[
				"rend",
				"renderer"
			],
			[
				"render",
				"renderedTexture"
			],
			[
				"ligh",
				"lightShader"
			],
			[
				"GL_COL",
				"GL_COLOR_ATTACHMENT1"
			],
			[
				"glBind",
				"glBindFramebuffer"
			],
			[
				"windo",
				"window_width"
			],
			[
				"fra",
				"fragNormalView"
			],
			[
				"pos",
				"posAttrib"
			],
			[
				"li",
				"Light"
			],
			[
				"Ro",
				"MocapRecording"
			],
			[
				"correct",
				"correctGuesses"
			],
			[
				"tran",
				"transform"
			],
			[
				"disp",
				"disp_stddev"
			],
			[
				"compu",
				"computableStreams"
			],
			[
				"angl",
				"angle_stddev"
			],
			[
				"sim",
				"simulate"
			],
			[
				"to",
				"totalGuesses"
			],
			[
				"cor",
				"correctGuesses"
			],
			[
				"correlns",
				"correlations"
			],
			[
				"first",
				"firstRotationReadings"
			],
			[
				"rese",
				"resetRecordedStates"
			],
			[
				"correl",
				"correlators"
			],
			[
				"sens",
				"sensorPlant"
			],
			[
				"simulat",
				"SimultationParameters"
			],
			[
				"nAn",
				"nAngleStep"
			],
			[
				"sm",
				"simulate"
			],
			[
				"arg",
				"argv"
			],
			[
				"max",
				"max_loaded"
			],
			[
				"tiem",
				"timestamp"
			],
			[
				"tra",
				"translation"
			],
			[
				"firs",
				"firstRotationReadings"
			],
			[
				"sensorP",
				"sensorPose"
			],
			[
				"comp",
				"computableStreams"
			],
			[
				"recorde",
				"recordedStates"
			]
		]
	},
	"buffers":
	[
		{
			"file": "modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp",
			"settings":
			{
				"buffer_size": 6909,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/autocal/Correlator.cpp",
			"settings":
			{
				"buffer_size": 10689,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp",
			"settings":
			{
				"buffer_size": 8859,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/math/matrix/Rotation3D.cpp",
			"settings":
			{
				"buffer_size": 7422,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/math/matrix/Rotation3D.h",
			"settings":
			{
				"buffer_size": 6540,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/math/matrix/Transform3D.h",
			"settings":
			{
				"buffer_size": 10004,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/autocal/CalibrationTools.h",
			"settings":
			{
				"buffer_size": 1797,
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared/utility/math/geometry/UnitQuaternion.cpp",
			"settings":
			{
				"buffer_size": 9384,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/math/geometry/UnitQuaternion.h",
			"settings":
			{
				"buffer_size": 3814,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/autocal/CalibrationTools.cpp",
			"settings":
			{
				"buffer_size": 13698,
				"line_ending": "Windows"
			}
		},
		{
			"file": "shared/utility/autocal/GraphicsTools.h",
			"settings":
			{
				"buffer_size": 9795,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Simultaneous use of multiple sensor systems provides improved accuracy and tracking range compared to use of a single system. However, this advantage comes at the cost of the user performing calibration procedures. This work contributes to the development of ambient calibration procedures which are performed in the background during normal sensor use. In particular, we present techniques for automatically identifying relationships between rigidly linked 6DoF and 3DoF sensors belonging to different sensor systems. The techniques allow for subsequent automatic alignment of the sensor systems. Two techniques (IF method and CE method) are presented and analysed in simulation for performance under varying noise and latency conditions. The methods were applied to two case studies. The first study identified sensors tracked with a gold standard rigid body tracker with one of six rigid bodies tracked by the first generation Kinect sensor. Good results were achieved, with each sensor identified correctly in at least 76% of estimates, or 4.5 times greater than random selection. The second case study is an interactive version of the system, which can match sensors very reliably. The system can detect a change in the configuration of the sensors in as little as 1-2 seconds, requiring movements on the order of 15cm or 90â—¦. It is recommended that the much simpler IF method is used for small systems, while the CE method can be used when many sensors must be distinguished.",
			"settings":
			{
				"buffer_size": 1481,
				"line_ending": "Unix",
				"name": "Simultaneous use of multiple sensor systems provid"
			}
		},
		{
			"file": "shared/utility/autocal/Correlator.h",
			"settings":
			{
				"buffer_size": 2101,
				"line_ending": "Unix"
			}
		},
		{
			"file": "shared/utility/autocal/PSMoveUtils.cpp",
			"settings":
			{
				"buffer_size": 8555,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package",
		"selected_items":
		[
			[
				"Package",
				"Package Control: Disable Package"
			],
			[
				"proto",
				"Set Syntax: Protocol Buffer"
			],
			[
				"p",
				"Package Control: Add Repository"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"cmak",
				"Set Syntax: CMakeEditor"
			],
			[
				"new",
				"ANF: New File"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: class-..-(class)"
			],
			[
				"anf",
				"ANF: New File"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"write",
				"WriteGooder"
			],
			[
				"writing",
				"Toggle Writing Style"
			],
			[
				"writ",
				"Toggle Writing Style"
			],
			[
				"add book",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"add",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"got",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"add b",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"add boo",
				"SublimeBookmarks: Add Bookmark"
			],
			[
				"got ",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"book",
				"SublimeBookmarks: Goto Bookmark"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"dici",
				"Dictionaries: Set Language"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"ssr",
				"Set Syntax: R"
			]
		],
		"width": 476.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jake/Kinect/Autocalibration",
		"/Users/jake/Kinect/Autocalibration/modules",
		"/Users/jake/Kinect/Autocalibration/modules/input",
		"/Users/jake/Kinect/Autocalibration/modules/support",
		"/Users/jake/Kinect/Autocalibration/roles",
		"/Users/jake/Kinect/Autocalibration/shared",
		"/Users/jake/Kinect/Autocalibration/shared/messages",
		"/Users/jake/Kinect/Autocalibration/shared/messages/input",
		"/Users/jake/Kinect/psmoveapi"
	],
	"file_history":
	[
		"/Users/jake/Kinect/Autocalibration/modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/support/MocapNoiseAnalysis/src/MocapNoiseAnalysis.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/support/MocapNoiseAnalysis/src/MocapNoiseAnalysis.h",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Record/src/Record.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Play/src/Play.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/support/MocapRecorder/src/MocapRecorder.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/LiveMatchMocap/src/LiveMatchMocap.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/GraphicsTools.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/PSMoveUtils.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/Correlator.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/MocapStream.cpp",
		"/Users/jake/Kinect/Autocalibration/build/config/LiveMatchMocap.yaml",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Transform3D.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/MocapRecording.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/MocapRecording.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/MocapStream.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/UnitQuaternion.h",
		"/Users/jake/Kinect/Autocalibration/modules/input/NatNet/src/NatNet.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/input/NatNet/src/NatNet.h",
		"/Users/jake/Kinect/Autocalibration/build/config/TestCalibrationTools.yaml",
		"/Users/jake/Kinect/Autocalibration/roles/record.role",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/View/src/View.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/Correlator.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Transform3D.cpp",
		"/Users/jake/Kinect/Autocalibration/roles/noiseanalysis.role",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/SensorPlant.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/SensorPlant.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/Simulation.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/UnitQuaternion.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/PSMoveUtils.h",
		"/Users/jake/Kinect/Autocalibration/shared/messages/input/MotionCapture.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/CalibrationTools.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/CalibrationTools.h",
		"/Users/jake/Kinect/Autocalibration/modules/support/PSMoveNoiseAnalysis/src/PSMoveNoiseAnalysis.h",
		"/Users/jake/Kinect/Autocalibration/modules/support/PSMoveNoiseAnalysis/src/PSMoveNoiseAnalysis.cpp",
		"/Users/jake/Kinect/Autocalibration/roles/play.role",
		"/Users/jake/Kinect/Autocalibration/b",
		"/Users/jake/Kinect/Autocalibration/modules/support/MocapRecorder/config/MocapRecorder.yaml",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/MocapRecorder.cpp",
		"/Users/jake/Kinect/Autocalibration/build/roles/record.cpp",
		"/Users/jake/Kinect/Autocalibration/roles/play/main.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Play/src/Play.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/SimulatedSensor.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/SimulatedSensor.h",
		"/Users/jake/Kinect/Autocalibration/roles/testcalibrationtools.role",
		"/Users/jake/Kinect/Autocalibration/modules/support/TestCalibrationTools/src/TestCalibrationTools.h",
		"/Users/jake/Kinect/Autocalibration/roles/livemocap.role",
		"/Users/jake/Kinect/Autocalibration/modules/input/NatNet/config/NatNet.yaml",
		"/Users/jake/Kinect/Autocalibration/shared/messages/input/proto/MotionCapture.proto",
		"/Users/jake/Kinect/Autocalibration/shared/messages/Vector.proto",
		"/Users/jake/Kinect/Autocalibration/modules/support/MocapRecorder/src/MocapRecorder.h",
		"/Users/jake/Kinect/Autocalibration/modules/input/NatNet/src/Parse.h",
		"/Users/jake/Kinect/Autocalibration/modules/support/NUcap/src/NUcap.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Rotation3D.cpp",
		"/Users/jake/Kinect/Autocalibration/build/shared/messages/proto/MotionCapture.pb.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/autocal/MocapRecorder.h",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/ViewPSMove/src/View.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Play/config/Play.yaml",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/ViewPSMove/src/View.h",
		"/Users/jake/Kinect/Autocalibration/roles/view.role",
		"/Users/jake/Kinect/Autocalibration/build/config/Play.yaml",
		"/Users/jake/Kinect/Autocalibration/tests/shared/utility/motion/TestKinematics.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Record/src/Record.h",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Record/tests/RecordTest.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/ViewPSMove/config/View.yaml",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/ViewPSMove/tests/ViewTest.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/input/NatNet/tests/NatNetTest.cpp",
		"/Users/jake/Kinect/Autocalibration/modules/psmove/Record/config/Record.yaml",
		"/Users/jake/Kinect/Autocalibration/shared/utility/error/openal_error_category.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/file/fileutil.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/file/fileutil.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/image/ColorModelConversions.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/image/ColorModelConversions.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/image/HSV.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/image/RGB.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/image/YCbCr.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/angle.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/comparison.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/coordinates.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Circle.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Circle.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Intersection.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Intersection.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Line.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Line.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/ParametricLine.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Plane.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Polygon.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Polygon.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Quad.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/Quad.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/RotatedRectangle.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/geometry/RotatedRectangle.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/AdaptiveIMUModel.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/AdaptiveIMUModel.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/IMUModel.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/IMUModel.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/LinearVec3Model.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/LinearVec3Model.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/ParticleFilter.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/kalman/UKF.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/matrix.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Rotation2D.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Rotation2D.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Rotation3D.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Transform2D.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/matrix/Transform2D.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/optimisation/PGAoptimiser.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/NPartiteRansac.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/Ransac.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/RansacCircleModel.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/RansacCircleModel.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/RansacLineModel.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/RansacLineModel.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/ransac/RansacResult.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/math/vision.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/nubugger/NUhelpers.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/strutil/ansi.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/strutil/banner.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/strutil/strutil.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/support/proto_armadillo.cpp",
		"/Users/jake/Kinect/Autocalibration/shared/utility/support/proto_armadillo.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/support/yaml_armadillo.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/support/yaml_expression.h",
		"/Users/jake/Kinect/Autocalibration/shared/utility/time/time.h",
		"/Users/jake/Kinect/Autocalibration/tests/test.cpp",
		"/Users/jake/Kinect/Autocalibration/tools/build/compile.py"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/jake/Kinect/Autocalibration",
			"/Users/jake/Kinect/psmoveapi",
			"",
			"/Users/jake/Kinect/Autocalibration/record",
			"",
			"/Users/jake/Kinect/Autocalibration/src",
			"/Users/jake/Kinect/psmoveapi",
			"/Users/jake/Kinect/Autocalibration/src",
			"/Users/jake/Kinect/psmoveapi",
			"",
			"/Users/jake/Kinect/OpenNI-Bin-Dev-MacOSX-v1.5.7.10/Samples/NiUserTracker",
			"/Users/jake/Kinect/OpenNI-Bin-Dev-MacOSX-v1.5.7.10/Samples/NiViewer",
			"",
			"UserGenerator",
			"",
			"C:\\H3D\\H3DAPI",
			"C:\\H3D",
			"C:\\H3D\\H3DAPI",
			"C:\\H3D\\H3DAPI\\Armadillo",
			"C:\\H3D\\",
			"C:\\H3D\\H3DAPI",
			"C:\\H3D\\H3DUtil",
			"",
			"C:\\H3D\\H3DAPI\\H3DViewer",
			"C:\\H3D\\H3DAPI",
			"",
			"C:\\Users\\Jake\\OculusSDK-0.4.2\\OculusSDK\\Samples\\OculusRoomTiny",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"- ",
			"pair",
			"    std::cout << __LINE__ << std::endl;\n",
			"std::cout << __LINE__ << std::endl;",
			"rectify",
			"min",
			"1",
			"orth",
			"Transform3D",
			"secon",
			"first",
			"R",
			"std::cout ",
			"std::cout",
			"\n		std::cout",
			"solveKronecker_Shah2013",
			"error",
			"pxpy",
			"submat(0,3,2,3)",
			"submat(0,0,2,2)",
			"y[0]",
			"rows(1,3)",
			">",
			"solveWithSVD",
			"q",
			"qx",
			"q",
			"qx",
			"q",
			"x",
			"mat",
			"q[",
			"q.",
			"[",
			"q.",
			"Scalar",
			"Index",
			".coeff(",
			"coeff",
			"q",
			"-q2",
			"q",
			"minDiffPos",
			"Angle",
			"elimination_score_threshold",
			"resetRe",
			"W",
			"Q",
			"normalise",
			"x",
			"v",
			"u",
			"s",
			"u",
			"rotation",
			"l",
			"x",
			"Mocap",
			"MOCAP",
			"MocapNoiseAnalysis",
			"running_stat_vec",
			"MotionCapture",
			"simParams",
			"std::cout << __LINE__ << std::endl;",
			"psmoveTracker",
			"glm",
			"0.01",
			"pitch",
			"positio",
			"const",
			"dMocapStream",
			"1",
			"correctForAutocalibrationCoordinateSystem",
			"r.pose",
			"RHInput",
			"addMeasurement",
			"setRigidBodyInFrame",
			"r.pose.translation()",
			"B",
			"A",
			"		std::cout << __FILE__ << \" : \" <<  __LINE__ << std::endl;\n",
			"std::cout << __FILE__ << \" : \" <<  __LINE__ << std::endl;",
			"getFrame",
			"states",
			"parentStream",
			"parent",
			"ForAll",
			"simParam",
			"simParameters",
			"isRunning",
			"MocapStream",
			"{",
			"getSimulatedFrame",
			"simulationParameters",
			"stream",
			"parentStream",
			"adds",
			"std::pair<std::string,std::string>",
			"simulatedCorrelations",
			"latencyOfStream1",
			"sim",
			"stream",
			"ids",
			"stream",
			"(*stream)",
			"tmestamp",
			"(*stream)",
			"stream[",
			"stream.",
			"StreamNamePair",
			"std::pair<std::string,std::string>",
			"std::pair<int,int>",
			"MocapStream::SimulationParameters",
			"MocapStream::SimulationParamters",
			"sim",
			"rbID",
			"norm",
			"simParams",
			"SimulationParameters",
			"simParams",
			",",
			"rbID",
			"simulatedCorrelations",
			"A",
			"solveHomogeneousDualSylvester",
			"A",
			"Scale",
			"pose"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SimulationParameters",
			"solveZhuang1994",
			"Autocalibration",
			"pose",
			"OVR::Matrix4f",
			"OVR::Quatf",
			"OVR",
			"ParticleFilter",
			"\\textit",
			"Alg.",
			"Sect.",
			"Fig.",
			"modelling",
			"modelled",
			"cluster",
			"POR",
			"HMD",
			"pupil/corneal",
			"",
			"VEData",
			"array",
			"Compact-Open",
			"Separation",
			"separation",
			"compact-open",
			"'",
			"last_save_time",
			"\\curlS",
			"\\S",
			"Physics",
			"modelling",
			"\\R",
			"point of regard",
			"infinity",
			"MyProject",
			"U",
			"\\ldots",
			"\\N",
			"head",
			"POR",
			"HMD",
			"",
			"stereo",
			"fig:nonlinearity",
			"\\mathcal{X}",
			"\\mathcal{X}_",
			"\\mathcal{X}",
			"\\chi",
			"\\xi",
			"self.weight",
			"\\circ",
			"sublime.desktop"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 15,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6909,
						"regions":
						{
						},
						"selection":
						[
							[
								3179,
								3179
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1522.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "shared/utility/autocal/Correlator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10689,
						"regions":
						{
						},
						"selection":
						[
							[
								6544,
								6544
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2740.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8859,
						"regions":
						{
						},
						"selection":
						[
							[
								7374,
								7379
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2252.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "shared/utility/math/matrix/Rotation3D.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7422,
						"regions":
						{
						},
						"selection":
						[
							[
								2795,
								2795
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 404.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "shared/utility/math/matrix/Rotation3D.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6540,
						"regions":
						{
						},
						"selection":
						[
							[
								4454,
								4454
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shared/utility/math/matrix/Transform3D.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10004,
						"regions":
						{
						},
						"selection":
						[
							[
								7651,
								7208
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2990.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shared/utility/autocal/CalibrationTools.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1797,
						"regions":
						{
						},
						"selection":
						[
							[
								1002,
								1002
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "shared/utility/math/geometry/UnitQuaternion.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9384,
						"regions":
						{
						},
						"selection":
						[
							[
								1057,
								1064
							],
							[
								3813,
								3820
							],
							[
								4110,
								4117
							],
							[
								4239,
								4246
							],
							[
								4446,
								4453
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1192.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "shared/utility/math/geometry/UnitQuaternion.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3814,
						"regions":
						{
						},
						"selection":
						[
							[
								2583,
								2583
							],
							[
								2768,
								2768
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 802.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "shared/utility/autocal/CalibrationTools.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13698,
						"regions":
						{
						},
						"selection":
						[
							[
								9747,
								9747
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3588.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "shared/utility/autocal/GraphicsTools.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9795,
						"regions":
						{
						},
						"selection":
						[
							[
								8416,
								8423
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 191.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "shared/utility/autocal/CalibrationTools.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1797,
						"regions":
						{
						},
						"selection":
						[
							[
								1797,
								1797
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "shared/utility/math/geometry/UnitQuaternion.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9384,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								9384
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "shared/utility/math/geometry/UnitQuaternion.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3814,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								3814
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "shared/utility/autocal/Correlator.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10689,
						"regions":
						{
						},
						"selection":
						[
							[
								4689,
								4689
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1626.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1481,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1481
							]
						],
						"settings":
						{
							"WordCountShouldRun": true,
							"WordCountSyntax": "plain text",
							"auto_name": "Simultaneous use of multiple sensor systems provid",
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6909,
						"regions":
						{
						},
						"selection":
						[
							[
								3822,
								3828
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 54.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "shared/utility/math/matrix/Transform3D.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10004,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								456
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "shared/utility/autocal/Correlator.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2101,
						"regions":
						{
						},
						"selection":
						[
							[
								651,
								651
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 187.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "shared/utility/autocal/PSMoveUtils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8555,
						"regions":
						{
						},
						"selection":
						[
							[
								1379,
								1379
							]
						],
						"settings":
						{
							"glslvalidator_configured": true,
							"glslvalidator_enabled": 1,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 421.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.latex_log":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "autocal.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"livema",
				"Autocalibration/modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp"
			],
			[
				"grahpi",
				"Autocalibration/shared/utility/autocal/GraphicsTools.h"
			],
			[
				"testca",
				"Autocalibration/modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp"
			],
			[
				"transf",
				"Autocalibration/shared/utility/math/matrix/Transform3D.h"
			],
			[
				"unit",
				"Autocalibration/shared/utility/math/geometry/UnitQuaternion.cpp"
			],
			[
				"psmoveut",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.cpp"
			],
			[
				"corre",
				"Autocalibration/shared/utility/autocal/Correlator.cpp"
			],
			[
				"transform3d",
				"Autocalibration/shared/utility/math/matrix/Transform3D.h"
			],
			[
				"rotation",
				"Autocalibration/shared/utility/math/matrix/Rotation3D.cpp"
			],
			[
				"rotation3",
				"Autocalibration/shared/utility/math/matrix/Rotation3D.cpp"
			],
			[
				"testc",
				"Autocalibration/modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp"
			],
			[
				"calibra",
				"Autocalibration/shared/utility/autocal/CalibrationTools.cpp"
			],
			[
				"unitq",
				"Autocalibration/shared/utility/math/geometry/UnitQuaternion.h"
			],
			[
				"testcaya",
				"Autocalibration/build/config/TestCalibrationTools.yaml"
			],
			[
				"calibrati",
				"Autocalibration/shared/utility/autocal/CalibrationTools.cpp"
			],
			[
				"corr",
				"Autocalibration/shared/utility/autocal/Correlator.cpp"
			],
			[
				"unitqua",
				"Autocalibration/shared/utility/math/geometry/UnitQuaternion.h"
			],
			[
				"testcali",
				"Autocalibration/build/config/TestCalibrationTools.yaml"
			],
			[
				"calibrat",
				"Autocalibration/shared/utility/autocal/CalibrationTools.cpp"
			],
			[
				"mocaprecord",
				"Autocalibration/shared/utility/autocal/MocapRecording.cpp"
			],
			[
				"psmoveu",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.cpp"
			],
			[
				"livem",
				"Autocalibration/modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp"
			],
			[
				"view.",
				"Autocalibration/modules/psmove/View/src/View.cpp"
			],
			[
				"psmoveno",
				"Autocalibration/modules/support/PSMoveNoiseAnalysis/src/PSMoveNoiseAnalysis.cpp"
			],
			[
				"play",
				"Autocalibration/modules/psmove/Play/src/Play.cpp"
			],
			[
				"motionca",
				"Autocalibration/shared/messages/input/MotionCapture.h"
			],
			[
				"liverole",
				"Autocalibration/roles/livemocap.role"
			],
			[
				"pla.role",
				"Autocalibration/roles/play.role"
			],
			[
				"mocapn",
				"Autocalibration/modules/support/MocapNoiseAnalysis/src/MocapNoiseAnalysis.cpp"
			],
			[
				"b",
				"Autocalibration/b"
			],
			[
				"simul",
				"Autocalibration/shared/utility/autocal/Simulation.h"
			],
			[
				"correl",
				"Autocalibration/shared/utility/autocal/Correlator.cpp"
			],
			[
				"grap",
				"Autocalibration/shared/utility/autocal/GraphicsTools.h"
			],
			[
				"mocaprecorder",
				"Autocalibration/modules/support/MocapRecorder/src/MocapRecorder.cpp"
			],
			[
				"mocaprec",
				"Autocalibration/modules/support/MocapRecorder/config/MocapRecorder.yaml"
			],
			[
				"record.cpp",
				"Autocalibration/modules/psmove/Record/src/Record.cpp"
			],
			[
				"record.rol",
				"Autocalibration/roles/record.role"
			],
			[
				"graph",
				"Autocalibration/shared/utility/autocal/GraphicsTools.h"
			],
			[
				"transform",
				"Autocalibration/shared/utility/math/matrix/Transform3D.h"
			],
			[
				"view.cp",
				"Autocalibration/modules/psmove/View/src/View.cpp"
			],
			[
				"nat",
				"Autocalibration/modules/input/NatNet/src/NatNet.cpp"
			],
			[
				"sensorplan",
				"Autocalibration/shared/utility/autocal/SensorPlant.h"
			],
			[
				"psmovuti",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.h"
			],
			[
				"mocaps",
				"Autocalibration/shared/utility/autocal/MocapStream.h"
			],
			[
				"livemat",
				"Autocalibration/modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp"
			],
			[
				"psmoveutil",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.cpp"
			],
			[
				"trans",
				"Autocalibration/shared/utility/math/matrix/Transform3D.h"
			],
			[
				"sensor",
				"Autocalibration/shared/utility/autocal/SensorPlant.cpp"
			],
			[
				"play.cp",
				"Autocalibration/modules/psmove/Play/src/Play.cpp"
			],
			[
				"mocapst",
				"Autocalibration/shared/utility/autocal/MocapStream.cpp"
			],
			[
				"sensorplant",
				"Autocalibration/shared/utility/autocal/SensorPlant.cpp"
			],
			[
				"mocapstrea",
				"Autocalibration/shared/utility/autocal/MocapStream.cpp"
			],
			[
				"live",
				"Autocalibration/modules/psmove/LiveMatchMocap/src/LiveMatchMocap.cpp"
			],
			[
				"testcal.cpp",
				"Autocalibration/modules/support/TestCalibrationTools/src/TestCalibrationTools.cpp"
			],
			[
				"play.cpp",
				"Autocalibration/modules/psmove/Play/src/Play.cpp"
			],
			[
				"graphics",
				"Autocalibration/shared/utility/autocal/GraphicsTools.h"
			],
			[
				"correlat",
				"Autocalibration/shared/utility/autocal/Correlator.cpp"
			],
			[
				"record",
				"Autocalibration/modules/psmove/Record/src/Record.cpp"
			],
			[
				"view.cpp",
				"Autocalibration/modules/psmove/View/src/View.cpp"
			],
			[
				"pla",
				"Autocalibration/modules/psmove/Play/src/Play.cpp"
			],
			[
				"sensorpla",
				"Autocalibration/shared/utility/autocal/SensorPlant.cpp"
			],
			[
				"psmoveutils",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.cpp"
			],
			[
				"calibrationtools",
				"Autocalibration/shared/utility/autocal/CalibrationTools.cpp"
			],
			[
				"psmouti",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.cpp"
			],
			[
				"transform3",
				"Autocalibration/shared/utility/math/matrix/Transform3D.h"
			],
			[
				"calibrationto",
				"Autocalibration/shared/utility/autocal/CalibrationTools.cpp"
			],
			[
				"tesyaml",
				"Autocalibration/build/config/TestCalibrationTools.yaml"
			],
			[
				"testcal",
				"Autocalibration/roles/testcalibrationtools.role"
			],
			[
				"sensorpa",
				"Autocalibration/shared/utility/autocal/SensorPlant.cpp"
			],
			[
				"livemy",
				"Autocalibration/build/config/LiveMatchMocap.yaml"
			],
			[
				"rotation3d",
				"Autocalibration/shared/utility/math/matrix/Rotation3D.cpp"
			],
			[
				"psmovutil",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.h"
			],
			[
				"mocapreco",
				"Autocalibration/shared/utility/autocal/MocapRecording.h"
			],
			[
				"psmoveuti",
				"Autocalibration/shared/utility/autocal/PSMoveUtils.cpp"
			],
			[
				"nucap",
				"Autocalibration/modules/support/NUcap/src/NUcap.cpp"
			],
			[
				"parse",
				"Autocalibration/modules/input/NatNet/src/Parse.h"
			],
			[
				"natnet",
				"Autocalibration/modules/input/NatNet/src/NatNet.cpp"
			],
			[
				"natnetyaml",
				"Autocalibration/modules/input/NatNet/config/NatNet.yaml"
			],
			[
				"messagesinput",
				"Autocalibration/shared/messages/input/MotionCapture.h"
			],
			[
				"vector",
				"Autocalibration/shared/messages/Vector.proto"
			],
			[
				"motioncap",
				"Autocalibration/build/shared/messages/proto/MotionCapture.pb.h"
			],
			[
				"mocapre",
				"Autocalibration/shared/utility/autocal/MocapRecording.h"
			],
			[
				"mocapstream",
				"Autocalibration/shared/utility/autocal/MocapStream.cpp"
			],
			[
				"mocaprecording",
				"Autocalibration/shared/utility/autocal/MocapRecording.cpp"
			],
			[
				"grapt",
				"Autocalibration/shared/utility/autocal/GraphicsTools.h"
			],
			[
				"play.ya",
				"Autocalibration/modules/psmove/Play/config/Play.yaml"
			],
			[
				"play.yam",
				"Autocalibration/modules/psmove/Play/config/Play.yaml"
			],
			[
				"view.role",
				"Autocalibration/roles/view.role"
			],
			[
				"view",
				"Autocalibration/modules/psmove/ViewPSMove/src/View.cpp"
			],
			[
				"reco",
				"Autocalibration/modules/psmove/Record/config/Record.yaml"
			],
			[
				"findsfml",
				"Autocalibration/tools/cmake/FindSFML.cmake"
			],
			[
				"sha",
				"Autocalibration/tools/cmake/SharedLibraries.cmake"
			],
			[
				"shar",
				"Autocalibration/tools/cmake/SharedLibraries.cmake"
			],
			[
				"main.",
				"Autocalibration/roles/play/main.cpp"
			],
			[
				"main",
				"Autocalibration/roles/record/main.cpp"
			],
			[
				"main.cpp",
				"Autocalibration/roles/play/main.cpp"
			],
			[
				"play.",
				"Autocalibration/roles/play.role"
			],
			[
				"findglfw",
				"Autocalibration/tools/cmake/FindGLFW.cmake"
			],
			[
				"toolch",
				"Autocalibration/tools/cmake/ToolchainLibraryFinder.cmake"
			],
			[
				"findopen",
				"Autocalibration/tools/cmake/FindOpenBLAS.cmake"
			],
			[
				"cmakeold",
				"Autocalibration/CMakeListsOld.txt"
			],
			[
				"generat",
				"Autocalibration/tools/scripts/generate_role.py"
			],
			[
				"compiler",
				"Autocalibration/tools/cmake/Compiler.cmake"
			],
			[
				"nuclear",
				"Autocalibration/tools/cmake/NUClearModuleBuilder.cmake"
			],
			[
				"addrole",
				"Autocalibration/tools/cmake/AddRole.cmake"
			],
			[
				"filewat",
				"Autocalibration/shared/messages/support/FileWatch.h"
			],
			[
				"filewatch.h",
				"Autocalibration/shared/messages/support/FileWatch.h"
			],
			[
				"filewatcher.h",
				"Autocalibration/modules/support/extension/FileWatcher/src/FileWatcher.h"
			],
			[
				"filewa",
				"Autocalibration/modules/support/extension/FileWatcher/src/FileWatcher.cpp"
			],
			[
				"calib",
				"Autocalibration/common/CalibrationTools.cpp"
			],
			[
				"mocap",
				"Autocalibration/common/MocapRecording.cpp"
			],
			[
				"sensorp",
				"Autocalibration/common/SensorPlant.h"
			],
			[
				"psmove",
				"Autocalibration/common/PSMoveUtils.cpp"
			],
			[
				"psmove_trac",
				"psmoveapi/src/tracker/psmove_tracker.c"
			],
			[
				"psmove_exam",
				"psmoveapi/examples/c/psmove_examples_opengl.h"
			],
			[
				"correla",
				"Autocalibration/common/Correlator.cpp"
			],
			[
				"graphi",
				"Autocalibration/common/GraphicsTools.h"
			],
			[
				"mocapstre",
				"Autocalibration/common/MocapStream.h"
			],
			[
				"transfor",
				"Autocalibration/utility/math/matrix/Transform3D.h"
			],
			[
				"psmovetracker",
				"psmoveapi/src/tracker/psmove_tracker.c"
			],
			[
				"example",
				"psmoveapi/examples/c/example.c"
			],
			[
				"correlator",
				"Autocalibration/src/Correlator.h"
			],
			[
				"tracker_camer",
				"examples/c/tracker_camera_calibration.c"
			],
			[
				"opengl",
				"examples/c/test_opengl.cpp"
			],
			[
				"test_",
				"examples/python/test_fusion.py"
			],
			[
				"",
				"src/psmove_private.h"
			],
			[
				"dista",
				"examples/c/distance_calibration.c"
			],
			[
				"psmove_tra",
				"src/tracker/psmove_tracker.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 334.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
